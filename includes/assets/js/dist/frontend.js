/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./includes/assets/js/src/frontend.js":
/*!********************************************!*\
  !*** ./includes/assets/js/src/frontend.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("(function ($) {\n  \"use strict\"; //throttle form lodash\n\n  var throttle = __webpack_require__(/*! lodash.throttle */ \"./node_modules/lodash.throttle/index.js\"); //Quickly generates a random string\n\n\n  var randomString = function randomString() {\n    var rand = Math.random();\n    return 'key' + rand.toString(36).replace(/[^a-z]+/g, '');\n  }; // Our little library for displaying popup forms.\n\n\n  var popups = __webpack_require__(/*! ./partials/popups */ \"./includes/assets/js/src/partials/popups.js\");\n  /**\r\n   * Popup Manager.\r\n   */\n\n\n  var popup_manager = function popup_manager() {\n    return {\n      //Avoid displaying a popup when the user subscribes via one popup\n      subscribed: false,\n      // Hides a displayed popup\n      hidePopup: function hidePopup() {\n        popups.close();\n      },\n      // Log form view.\n      logFormView: function logFormView(form_id) {\n        $.post(noptin.ajaxurl, {\n          action: \"noptin_log_form_impression\",\n          _wpnonce: noptin.nonce,\n          form_id: form_id\n        });\n      },\n      // Display a popup.\n      displayPopup: function displayPopup(popup, force) {\n        if ($(popup).closest('.noptin-optin-main-wrapper').hasClass('noptin-slide_in-main-wrapper')) {\n          return this.displaySlideIn(popup, force);\n        } // Do not display several popups at once.\n\n\n        if (!force && (popups.is_showing || this.subscribed)) {\n          return;\n        } // Log form view\n\n\n        this.logFormView($(popup).find('input[name=noptin_form_id]').val()); // Replace the content if a popup is already showing.\n\n        if (popups.is_showing) {\n          popups.replaceContent($(popup).closest('.noptin-popup-main-wrapper'));\n        } else {\n          popups.open($(popup).closest('.noptin-popup-main-wrapper'));\n        } // Some forms are only set to be displayed once per session.\n\n\n        var id = $(popup).find('input[name=noptin_form_id]').val();\n\n        if (typeof $(popup).data('once-per-session') !== 'undefined') {\n          localStorage.setItem(\"noptinFormDisplayed\" + id, new Date().getTime());\n        } else {\n          sessionStorage.setItem(\"noptinFormDisplayed\" + id, '1');\n        }\n      },\n      // Displays a slide in and attaches \"close\" event handlers.\n      displaySlideIn: function displaySlideIn(slide_in, force) {\n        if (!force && this.subscribed) {\n          return;\n        } //Log form view\n\n\n        this.logFormView($(slide_in).find('input[name=noptin_form_id]').val()); //Display the form\n\n        $(slide_in).addClass('noptin-showing');\n      }\n    };\n  };\n\n  var noptin_popups = popup_manager(); //Contains several triggers for displaying popups\n\n  var noptinDisplayPopup = {\n    //Displays a popup immeadiately\n    immeadiate: function immeadiate() {\n      noptin_popups.displayPopup(this);\n    },\n    //Exit intent\n    before_leave: function before_leave() {\n      var _this = this;\n\n      var key = randomString(),\n          _delayTimer = null,\n          sensitivity = 0,\n          //how many pixels from the top should we display the popup?\n      delay = 200; //wait 200ms before displaying popup\n      //Display popup when the user tries to leave...\n\n      $(document).on('mouseleave.' + key, function (e) {\n        if (e.clientY > sensitivity) {\n          return;\n        }\n\n        _delayTimer = setTimeout(function () {\n          //Display the popup\n          noptin_popups.displayPopup(_this); //Remove watchers\n\n          $(document).off('mouseleave.' + key);\n          $(document).off('mouseenter.' + key);\n        }, delay);\n      }); //...unless they decide to come back\n\n      $(document).on('mouseenter.' + key, function (e) {\n        if (_delayTimer) {\n          clearTimeout(_delayTimer);\n          _delayTimer = null;\n        }\n      });\n    },\n    //After the user starts scrolling\n    on_scroll: function on_scroll() {\n      var popup = this,\n          key = randomString(),\n          showPercent = parseInt($(this).data('on-scroll'));\n\n      var watchScroll = function watchScroll() {\n        var scrolled = $(window).scrollTop(),\n            Dheight = $(document).height(),\n            Wheight = $(window).height();\n        var scrollPercent = scrolled / (Dheight - Wheight) * 100;\n\n        if (scrollPercent > showPercent) {\n          noptin_popups.displayPopup(popup);\n          $(window).off('scroll.' + key);\n        }\n      };\n\n      $(window).on('scroll.' + key, throttle(watchScroll, 500));\n    },\n    //after_delay\n    after_delay: function after_delay() {\n      var _this2 = this;\n\n      var delay = parseInt($(this).data('after-delay')) * 1000;\n      setTimeout(function () {\n        noptin_popups.displayPopup(_this2);\n      }, delay);\n    },\n    //after_comment\n    after_comment: function after_comment() {\n      $('#commentform').on('submit', function (e) {//TODO\n      });\n    },\n    //after_click\n    after_click: function after_click() {\n      var el = $(this).data('after-click'),\n          popup = this;\n\n      if (el) {\n        $('body').on('click', el, function (e) {\n          e.preventDefault();\n          noptin_popups.displayPopup(popup, true);\n        });\n      }\n    }\n  }; // Loop through all popups and attach triggers.\n\n  $('.noptin-popup-main-wrapper .noptin-optin-form-wrapper').each(function () {\n    var trigger = $(this).data('trigger'); // Some forms are only set to be displayed once per session\n\n    var id = $(this).find('input[name=noptin_form_id]').val();\n\n    if (typeof $(this).data('once-per-session') !== 'undefined' && 'after_click' != trigger) {\n      if (id) {\n        var addedTime = localStorage.getItem(\"noptinFormDisplayed\" + id);\n        var time = new Date().getTime(); // Only display the popup once per week.\n\n        if (addedTime && time - addedTime < 604800000) {\n          return true;\n        }\n\n        localStorage.removeItem(\"noptinFormDisplayed\" + id);\n      }\n    } else {\n      if (id && 'after_click' != trigger) {\n        if (sessionStorage.getItem(\"noptinFormDisplayed\" + id)) {\n          return;\n        }\n      }\n    }\n\n    if (noptinDisplayPopup[trigger]) {\n      var cb = noptinDisplayPopup[trigger];\n      cb.call(this);\n    }\n  }); //Loop through all slide ins and attach triggers\n\n  $('.noptin-slide_in-main-wrapper .noptin-optin-form-wrapper').each(function () {\n    var trigger = $(this).data('trigger');\n\n    if (noptinDisplayPopup[trigger]) {\n      var cb = noptinDisplayPopup[trigger];\n      cb.call(this);\n    }\n  }); // Hide slide in form.\n\n  $(document).ready(function () {\n    $(document).on('click', '.noptin-showing .noptin-popup-close', function (e) {\n      $(this).closest('.noptin-showing').removeClass('noptin-showing');\n    });\n  }); // Submits forms via ajax.\n\n  function subscribe_user(form) {\n    $(form).prepend('<label style=\"display: none;\"><input type=\"checkbox\" name=\"noptin_confirm_submit\"/>Are you sure?</label>'); //select the form\n\n    $('body').on('submit', form, function (e) {\n      var _this3 = this;\n\n      //Prevent the form from submitting\n      e.preventDefault(); //Modify form state\n\n      $(this).fadeTo(600, 0.5).find('.noptin_feedback_success, .noptin_feedback_error').empty().hide(); //Prep all form data\n\n      var data = {},\n          fields = $(this).serializeArray();\n      jQuery.each(fields, function (i, field) {\n        data[field.name] = field.value;\n      }); //Add nonce and action\n\n      data.action = \"noptin_new_subscriber\";\n      data._wpnonce = noptin.nonce;\n      data.conversion_page = window.location.href; //Post it to the server\n\n      $.post(noptin.ajaxurl, data) //Update the user of success\n      .done(function (data, status, xhr) {\n        if ('string' == typeof data) {\n          $(_this3).find('.noptin_feedback_error').text(data).show();\n          return;\n        } // Google Analytics\n\n\n        try {\n          if (typeof gtag === 'function') {\n            gtag('event', 'subscribe', {\n              'method': 'Noptin Form'\n            });\n          } else if (typeof ga === 'function') {\n            ga('send', 'event', 'Noptin Form', 'Subscribe', 'Noptin');\n          }\n        } catch (err) {\n          console.error(err.message);\n        }\n\n        noptin_popups.subscribed = true;\n\n        if (data.action == 'redirect') {\n          window.location = data.redirect;\n          return;\n        } // Gutenberg\n\n\n        var url = $(_this3).find('.noptin_form_redirect').val();\n\n        if (url) {\n          window.location = url;\n          return;\n        }\n\n        if (data.action == 'msg') {\n          $(_this3).html('<div class=\"noptin-big noptin-padded\">' + data.msg + '</div>');\n          $(_this3).css({\n            display: 'flex',\n            justifyContent: 'center'\n          });\n          setTimeout(function () {\n            $(_this3).closest('.noptin-showing').removeClass('noptin-showing');\n          }, 2000);\n        }\n      }).fail(function () {\n        var msg = 'Could not establish a connection to the server.';\n        $(_this3).find('.noptin_feedback_error').text(msg).show();\n      }).always(function () {\n        $(_this3).fadeTo(600, 1);\n      });\n    });\n  } // Normal forms.\n\n\n  subscribe_user('.noptin-optin-form-wrapper form'); // Gutenberg forms.\n\n  $('.wp-block-noptin-email-optin form, .noptin-email-optin-widget form').find('input[type=email]').attr('name', 'email');\n  subscribe_user('.wp-block-noptin-email-optin form, .noptin-email-optin-widget form'); // Existing subscribers.\n\n  $(document).on('click', '.noptin-mark-as-existing-subscriber', function (e) {\n    var setCookie = function setCookie(cname) {\n      var d = new Date();\n      d.setTime(d.getTime() + 30 * 24 * 60 * 60 * 1000); // 30 days from now in milliseconds\n\n      var expires = \"expires=\" + d.toUTCString();\n      document.cookie = \"\".concat(cname, \"=1;\").concat(expires, \";path=\").concat(noptin.cookie_path);\n    };\n\n    if (noptin.cookie) {\n      setCookie(noptin.cookie);\n    }\n\n    setCookie('noptin_email_subscribed');\n    $(this).closest('.noptin-showing').removeClass('noptin-showing');\n    popups.close();\n    noptin_popups.subscribed = true;\n  });\n})(jQuery);\n\n//# sourceURL=webpack://noptin/./includes/assets/js/src/frontend.js?");

/***/ }),

/***/ "./includes/assets/js/src/partials/popups.js":
/*!***************************************************!*\
  !*** ./includes/assets/js/src/partials/popups.js ***!
  \***************************************************/
/***/ ((module) => {

eval("// the popup itself is an object that exposes a simple API to open and close vex objects in various ways\nvar noptinPopup = {\n  is_showing: false,\n  classes: {\n    popup: 'noptin-popup',\n    content: 'noptin-popup-content',\n    overlay: 'noptin-popup-overlay',\n    close: 'noptin-popup-close',\n    closing: 'noptin-popup-closing',\n    open: 'noptin-popup-open',\n    opening: 'noptin-popup-opening',\n    opened: 'noptin-popup-opened'\n  },\n  el: '',\n  content: '',\n  open: function open(content) {\n    var _this = this;\n\n    // Set state\n    this.is_showing = true; // Create the popup.\n\n    this.el = jQuery('<div></div>').addClass(\"\".concat(this.classes.popup, \" \").concat(this.classes.opening)); // overlay.\n\n    this.el.append(\"<div class=\\\"\".concat(this.classes.overlay, \"\\\"></div>\")); // Content.\n\n    this.el.append(\"<div class=\\\"\".concat(this.classes.content, \"\\\"></div>\"));\n    this.content = this.el.find(\".\".concat(this.classes.content)).html(jQuery(content).prop('outerHTML')); // Close when clicking outside the content.\n\n    this.el.on('click', function (e) {\n      if (!_this.content.is(e.target) && _this.content.has(e.target).length === 0) {\n        _this.close();\n      }\n    }); // Close when clicking on the close button.\n\n    this.el.on('click', \".\".concat(this.classes.close), function () {\n      _this.close();\n    }); // Add to DOM\n\n    this.el.appendTo('body'); // Apply styling to the body\n\n    jQuery('body').addClass(this.classes.open); // Remove classes.\n\n    this.el.removeClass(this.classes.opening).addClass(this.classes.opened);\n  },\n  replaceContent: function replaceContent(content) {\n    // Check state\n    if (!this.is_showing) {\n      return false;\n    } // Replace Content.\n\n\n    this.content.html(jQuery(content).prop('outerHTML'));\n  },\n  // Closes the first popup\n  close: function close() {\n    var _this2 = this;\n\n    // Check state.\n    if (!this.is_showing) {\n      return true;\n    } // Update state\n\n\n    this.is_showing = false; // add the closing class.\n\n    this.el.removeClass(this.classes.opened).addClass(this.classes.closing); // Close the popup after animations.\n\n    this.transitionThen(this.content, function () {\n      // Remove the element from dom.\n      jQuery(_this2.el).remove(); // Remove the open class from the body.\n\n      jQuery('body').removeClass(_this2.classes.open);\n    });\n  },\n  // Calls the cb after we are done trasitioning\n  transitionThen: function transitionThen(el, cb) {\n    // Check if it has a transition/animation.\n    var hasTransition = el.css('transition') != 'none' || el.css('-webkit-transition') != 'none';\n    var hasAnimation = (el.css('animation-name') != 'none' || el.css('-webkit-animation-name') != 'none') && (el.css('animation-duration') != '0s' || el.css('-webkit-animation-duration') != '0s');\n    var called_cb = false;\n\n    var _cb = function _cb() {\n      if (!called_cb) {\n        cb();\n        called_cb = true;\n      }\n    };\n\n    if (hasAnimation) {\n      el.one('webkitAnimationEnd animationend', _cb);\n    } else if (hasTransition) {\n      el.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', _cb);\n    } else {\n      _cb();\n    } // Cleanup in case the above events do not fire.\n\n\n    setTimeout(_cb, 300);\n  }\n}; // Close the popup on esc\n\njQuery(window).on('keyup', function (e) {\n  if (e.keyCode === 27) {\n    noptinPopup.close();\n  }\n});\nmodule.exports = noptinPopup;\n\n//# sourceURL=webpack://noptin/./includes/assets/js/src/partials/popups.js?");

/***/ }),

/***/ "./node_modules/lodash.throttle/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.throttle/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n\n//# sourceURL=webpack://noptin/./node_modules/lodash.throttle/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./includes/assets/js/src/frontend.js");
/******/ 	
/******/ })()
;